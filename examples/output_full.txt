========= COMPUTE-SANITIZER
Warning on use of the timeseries module: If the inherent timescales of the system are long compared to those being analyzed, this statistical inefficiency may be an underestimate.  The estimate presumes the use of many statistically independent samples.  Tests should be performed to assess whether this condition is satisfied.   Be cautious in the interpretation of the data.

****** PyMBAR will use 64-bit JAX! *******
* JAX is currently set to 32-bit bitsize *
* which is its default.                  *
*                                        *
* PyMBAR requires 64-bit mode and WILL   *
* enable JAX's 64-bit mode when called.  *
*                                        *
* This MAY cause problems with other     *
* Uses of JAX in the same code.          *
******************************************

INFO:mace_md:Using SMFF openff_unconstrained-1.0.0.offxml
                                                                        [96m                                                                         
                                                                                                                                                      
                                                                                                                                                      
                                                                                                                                                      
                         ====================================================================================================                         
                          ooo        ooooo       .o.         .oooooo.   oooooooooooo         ooo        ooooo oooooooooo.                             
                          `88.       .888'      .888.       d8P'  `Y8b  `888'     `8         `88.       .888' `888'   `Y8b                            
                           888b     d'888      .8"888.     888           888                  888b     d'888   888      888                           
                           8 Y88. .P  888     .8' `888.    888           888oooo8             8 Y88. .P  888   888      888                           
                           8  `888'   888    .88ooo8888.   888           888    "    8888888  8  `888'   888   888      888                           
                           8    Y     888   .8'     `888.  `88b    ooo   888       o          8    Y     888   888     d88'                           
                          o8o        o888o o88o     o8888o  `Y8bood8P'  o888ooooood8         o8o        o888o o888bood8P'                             
                         ====================================================================================================                         
                        [0m                                                                                                                          
                                                                                                                                                      
                                                                                                                                                      
                                                                                                                                                      
+-----------------+------------------------------------------------------+
|     Argument    |                        Value                         |
+-----------------+------------------------------------------------------+
|       file      |               example_data/ejm_31.sdf                |
|      ml_mol     |               example_data/ejm_31.sdf                |
|     run_type    |                          md                          |
|      steps      |                        50000                         |
|  steps_per_iter |                         1000                         |
|     padding     |                         1.2                          |
|    box_shape    |                         cube                         |
|  constrain_res  |                         None                         |
| nonbondedCutoff |                         1.0                          |
|  ionic_strength |                         0.15                         |
|    potential    |                         mace                         |
|   temperature   |                        298.15                        |
|    minimiser    |                         None                         |
|     pressure    |                         None                         |
|    remove_cmm   |                        False                         |
| set_temperature |                        False                         |
|      unwrap     |                        False                         |
|    integrator   |                       langevin                       |
|     timestep    |                         1.0                          |
|    extract_nb   |                        False                         |
|     replicas    |                          1                           |
| lambda_schedule |                         None                         |
|    direction    |                       forward                        |
|   output_file   |                      output.pdb                      |
|    log_level    |                         INFO                         |
|      dtype      |                       float32                        |
|    output_dir   |                     test_openmm                      |
|       box       |                         None                         |
|     restart     |                        False                         |
|     decouple    |                        False                         |
|      equil      |                       minimise                       |
|   forcefields   | ['amber/protein.ff14SB.xml', 'amber14/DNA.OL15.xml'] |
|   water_model   |                        tip3p                         |
|       smff      |                         1.0                          |
|     interval    |                         100                          |
|     resname     |                         UNK                          |
|        nl       |                        nnpops                        |
|   max_n_pairs   |                          -1                          |
|       meta      |                        False                         |
|    model_path   |        ../../cuda_mace/optimized_model.model         |
|   system_type   |                         pure                         |
|     mm_only     |                        False                         |
|    write_gmx    |                        False                         |
|   ml_selection  |                       resname                        |
+-----------------+------------------------------------------------------+
2024-07-26 20:09:30.615 INFO: Using SMFF openff_unconstrained-1.0.0.offxml
INFO:mace_md:Initialized topology with (32, 3) positions
2024-07-26 20:09:30.645 INFO: Initialized topology with (32, 3) positions
WARNING:root:Warning: importing 'simtk.openmm' is deprecated.  Import 'openmm' instead.
2024-07-26 20:09:30.648 WARNING: Warning: importing 'simtk.openmm' is deprecated.  Import 'openmm' instead.
INFO:mace_md:Skipping minimisation step
Model dtype is torch.float64.
2024-07-26 20:09:32.226 INFO: Skipping minimisation step
========= Invalid __global__ read of size 4 bytes
=========     at 0x50 in /home/jhm/software/cuda_mace/cuda_mace/cuda/src/equivariant_linear_wmma_impl.cu:262:equivariant_linear_dispatcher_kernel(int, int, int, int, int, const int *, const int *, const int *, const int *, const int *, int, const float *, const float *, float *, float *)
=========     by thread (0,0,0) in block (0,0,0)
=========     Address 0x555e4f50dc80 is out of bounds
=========     and is 46093365617536 bytes before the nearest allocation at 0x7f4a42000000 of size 14680064 bytes
=========     Saved host backtrace up to driver entry point at kernel launch time
=========     Host Frame: [0x2f16d0]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame: [0x1498c]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaLaunchKernel [0x6bedb]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaError cudaLaunchKernel<char>(char const*, dim3, dim3, void**, unsigned long, CUstream_st*) [0x17f1a9]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:__device_stub__Z36equivariant_linear_dispatcher_kerneliiiiiPKiS0_S0_S0_S0_iPKfS2_PfS3_(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e754]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear_dispatcher_kernel(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e7b1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x17d777]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinearAutograd::forward(torch::autograd::AutogradContext*, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cb3d1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:_ZN5torch8autograd8FunctionI25EquivariantLinearAutogradE5applyIS2_JRN2at6TensorES7_S7_S7_S7_S7_S7_S7_RSt6vectorIS6_SaIS6_EESB_RKlSD_EEENSt9enable_ifIXsrSt7is_sameIT_S2_E5valueEDTclsrSG_7forwardLDnEspcl7declvalIT0_EEEEE4typeEDpOSI_ [0x1d3054]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinear::forward(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cbf6b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:at::Tensor std::__invoke_impl<at::Tensor, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(std::__invoke_memfun_ref, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1df40f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::__invoke_result<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type std::__invoke<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1dedf3]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:decltype (__invoke((*this)._M_pmf, (forward<EquivariantLinear&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<long&>)({parm#1}), (forward<long&>)({parm#1}))) std::_Mem_fn_base<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), true>::operator()<EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) const [0x1de76d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<std::is_member_pointer<std::decay<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::type>::value, std::invoke_result<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type>::type c10::guts::invoke<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1ddd67]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::operator()(c10::intrusive_ptr<EquivariantLinear, c10::detail::intrusive_target_default_null_type<EquivariantLinear> >, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1dcf44]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>) [0x1db31a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d9497]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::BoxedProxy<at::Tensor, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&) [0x1d7ca8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d5b2f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:void std::__invoke_impl<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::__invoke_other, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1dddeb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<is_invocable_r_v<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>, void>::type std::__invoke_r<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::enable_if&&, (torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&)...) [0x1dd000]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1db4f8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const [0x1aaad1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1a5db2]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::call(std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, c10::function_ref<void (torch::jit::Code const&)>) [0x1a6097]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::InterpreterStateImpl::callFunction(torch::jit::Function&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, bool) [0x418defb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419f1d6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaLaunchKernel.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaLaunchKernel [0x6bf1b]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaError cudaLaunchKernel<char>(char const*, dim3, dim3, void**, unsigned long, CUstream_st*) [0x17f1a9]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:__device_stub__Z36equivariant_linear_dispatcher_kerneliiiiiPKiS0_S0_S0_S0_iPKfS2_PfS3_(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e754]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear_dispatcher_kernel(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e7b1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x17d777]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinearAutograd::forward(torch::autograd::AutogradContext*, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cb3d1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:_ZN5torch8autograd8FunctionI25EquivariantLinearAutogradE5applyIS2_JRN2at6TensorES7_S7_S7_S7_S7_S7_S7_RSt6vectorIS6_SaIS6_EESB_RKlSD_EEENSt9enable_ifIXsrSt7is_sameIT_S2_E5valueEDTclsrSG_7forwardLDnEspcl7declvalIT0_EEEEE4typeEDpOSI_ [0x1d3054]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinear::forward(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cbf6b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:at::Tensor std::__invoke_impl<at::Tensor, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(std::__invoke_memfun_ref, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1df40f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::__invoke_result<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type std::__invoke<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1dedf3]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:decltype (__invoke((*this)._M_pmf, (forward<EquivariantLinear&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<long&>)({parm#1}), (forward<long&>)({parm#1}))) std::_Mem_fn_base<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), true>::operator()<EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) const [0x1de76d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<std::is_member_pointer<std::decay<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::type>::value, std::invoke_result<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type>::type c10::guts::invoke<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1ddd67]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::operator()(c10::intrusive_ptr<EquivariantLinear, c10::detail::intrusive_target_default_null_type<EquivariantLinear> >, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1dcf44]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>) [0x1db31a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d9497]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::BoxedProxy<at::Tensor, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&) [0x1d7ca8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d5b2f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:void std::__invoke_impl<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::__invoke_other, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1dddeb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<is_invocable_r_v<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>, void>::type std::__invoke_r<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::enable_if&&, (torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&)...) [0x1dd000]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1db4f8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const [0x1aaad1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1a5db2]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::call(std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, c10::function_ref<void (torch::jit::Code const&)>) [0x1a6097]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::InterpreterStateImpl::callFunction(torch::jit::Function&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, bool) [0x418defb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419f1d6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaLaunchKernel.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaLaunchKernel [0x6bf1b]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaError cudaLaunchKernel<char>(char const*, dim3, dim3, void**, unsigned long, CUstream_st*) [0x17f1a9]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:__device_stub__Z36equivariant_linear_dispatcher_kerneliiiiiPKiS0_S0_S0_S0_iPKfS2_PfS3_(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e754]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear_dispatcher_kernel(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e7b1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x17d777]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinearAutograd::forward(torch::autograd::AutogradContext*, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cb3d1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:_ZN5torch8autograd8FunctionI25EquivariantLinearAutogradE5applyIS2_JRN2at6TensorES7_S7_S7_S7_S7_S7_S7_RSt6vectorIS6_SaIS6_EESB_RKlSD_EEENSt9enable_ifIXsrSt7is_sameIT_S2_E5valueEDTclsrSG_7forwardLDnEspcl7declvalIT0_EEEEE4typeEDpOSI_ [0x1d3054]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinear::forward(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cbf6b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:at::Tensor std::__invoke_impl<at::Tensor, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(std::__invoke_memfun_ref, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1df40f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::__invoke_result<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type std::__invoke<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1dedf3]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:decltype (__invoke((*this)._M_pmf, (forward<EquivariantLinear&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<long&>)({parm#1}), (forward<long&>)({parm#1}))) std::_Mem_fn_base<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), true>::operator()<EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) const [0x1de76d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<std::is_member_pointer<std::decay<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::type>::value, std::invoke_result<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type>::type c10::guts::invoke<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1ddd67]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::operator()(c10::intrusive_ptr<EquivariantLinear, c10::detail::intrusive_target_default_null_type<EquivariantLinear> >, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1dcf44]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>) [0x1db31a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d9497]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::BoxedProxy<at::Tensor, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&) [0x1d7ca8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d5b2f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:void std::__invoke_impl<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::__invoke_other, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1dddeb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<is_invocable_r_v<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>, void>::type std::__invoke_r<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::enable_if&&, (torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&)...) [0x1dd000]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1db4f8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const [0x1aaad1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1a5db2]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::call(std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, c10::function_ref<void (torch::jit::Code const&)>) [0x1a6097]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::InterpreterStateImpl::callFunction(torch::jit::Function&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, bool) [0x418defb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419f1d6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaLaunchKernel.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaLaunchKernel [0x6bf1b]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaError cudaLaunchKernel<char>(char const*, dim3, dim3, void**, unsigned long, CUstream_st*) [0x17f1a9]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:__device_stub__Z36equivariant_linear_dispatcher_kerneliiiiiPKiS0_S0_S0_S0_iPKfS2_PfS3_(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e754]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear_dispatcher_kernel(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e7b1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x17d777]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinearAutograd::forward(torch::autograd::AutogradContext*, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cb3d1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:_ZN5torch8autograd8FunctionI25EquivariantLinearAutogradE5applyIS2_JRN2at6TensorES7_S7_S7_S7_S7_S7_S7_RSt6vectorIS6_SaIS6_EESB_RKlSD_EEENSt9enable_ifIXsrSt7is_sameIT_S2_E5valueEDTclsrSG_7forwardLDnEspcl7declvalIT0_EEEEE4typeEDpOSI_ [0x1d3054]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinear::forward(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cbf6b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:at::Tensor std::__invoke_impl<at::Tensor, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(std::__invoke_memfun_ref, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1df40f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::__invoke_result<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type std::__invoke<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1dedf3]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:decltype (__invoke((*this)._M_pmf, (forward<EquivariantLinear&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<long&>)({parm#1}), (forward<long&>)({parm#1}))) std::_Mem_fn_base<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), true>::operator()<EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) const [0x1de76d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<std::is_member_pointer<std::decay<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::type>::value, std::invoke_result<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type>::type c10::guts::invoke<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1ddd67]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::operator()(c10::intrusive_ptr<EquivariantLinear, c10::detail::intrusive_target_default_null_type<EquivariantLinear> >, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1dcf44]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>) [0x1db31a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d9497]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::BoxedProxy<at::Tensor, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&) [0x1d7ca8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d5b2f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:void std::__invoke_impl<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::__invoke_other, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1dddeb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<is_invocable_r_v<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>, void>::type std::__invoke_r<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::enable_if&&, (torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&)...) [0x1dd000]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1db4f8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const [0x1aaad1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1a5db2]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::call(std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, c10::function_ref<void (torch::jit::Code const&)>) [0x1a6097]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::InterpreterStateImpl::callFunction(torch::jit::Function&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, bool) [0x418defb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419f1d6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaLaunchKernel.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaLaunchKernel [0x6bf1b]
=========                in /usr/local/cuda/lib64/libcudart.so.12
=========     Host Frame:cudaError cudaLaunchKernel<char>(char const*, dim3, dim3, void**, unsigned long, CUstream_st*) [0x17f1a9]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:__device_stub__Z36equivariant_linear_dispatcher_kerneliiiiiPKiS0_S0_S0_S0_iPKfS2_PfS3_(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e754]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear_dispatcher_kernel(int, int, int, int, int, int const*, int const*, int const*, int const*, int const*, int, float const*, float const*, float*, float*) [0x17e7b1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:equivariant_linear(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x17d777]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinearAutograd::forward(torch::autograd::AutogradContext*, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cb3d1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:_ZN5torch8autograd8FunctionI25EquivariantLinearAutogradE5applyIS2_JRN2at6TensorES7_S7_S7_S7_S7_S7_S7_RSt6vectorIS6_SaIS6_EESB_RKlSD_EEENSt9enable_ifIXsrSt7is_sameIT_S2_E5valueEDTclsrSG_7forwardLDnEspcl7declvalIT0_EEEEE4typeEDpOSI_ [0x1d3054]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:EquivariantLinear::forward(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1cbf6b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:at::Tensor std::__invoke_impl<at::Tensor, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(std::__invoke_memfun_ref, at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1df40f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::__invoke_result<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type std::__invoke<at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::* const&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1dedf3]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:decltype (__invoke((*this)._M_pmf, (forward<EquivariantLinear&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<at::Tensor&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<std::vector<at::Tensor, std::allocator<at::Tensor> >&>)({parm#1}), (forward<long&>)({parm#1}), (forward<long&>)({parm#1}))) std::_Mem_fn_base<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), true>::operator()<EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) const [0x1de76d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<std::is_member_pointer<std::decay<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::type>::value, std::invoke_result<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>::type>::type c10::guts::invoke<at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&>(at::Tensor (EquivariantLinear::*&)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long), EquivariantLinear&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, at::Tensor&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, std::vector<at::Tensor, std::allocator<at::Tensor> >&, long&, long&) [0x1ddd67]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>::operator()(c10::intrusive_ptr<EquivariantLinear, c10::detail::intrusive_target_default_null_type<EquivariantLinear> >, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long) [0x1dcf44]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, 10ul, 11ul, 12ul>) [0x1db31a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:c10::guts::infer_function_traits_t::return_type torch::detail::call_torchbind_method_from_stack<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, false>(torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d9497]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::detail::BoxedProxy<at::Tensor, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>&) [0x1d7ca8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1d5b2f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:void std::__invoke_impl<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::__invoke_other, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1dddeb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::enable_if<is_invocable_r_v<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>, void>::type std::__invoke_r<void, torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&, std::vector<c10::IValue, std::allocator<c10::IValue> >&>(std::enable_if&&, (torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}&)...) [0x1dd000]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::class_<EquivariantLinear>::defineMethod<torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, torch::detail::WrapMethod<at::Tensor (EquivariantLinear::*)(at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, at::Tensor, std::vector<at::Tensor, std::allocator<at::Tensor> >, std::vector<at::Tensor, std::allocator<at::Tensor> >, long, long)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::initializer_list<torch::arg>)::{lambda(std::vector<c10::IValue, std::allocator<c10::IValue> >&)#1}>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1db4f8]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const [0x1aaad1]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x1a5db2]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::BuiltinOpFunction::call(std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, c10::function_ref<void (torch::jit::Code const&)>) [0x1a6097]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/lib/libcuda_mace.so
=========     Host Frame:torch::jit::InterpreterStateImpl::callFunction(torch::jit::Function&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<unsigned long>, bool) [0x418defb]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419f1d6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaLaunchKernel.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaLaunchKernel [0x6c358]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/../libcudart.so.11.0
=========     Host Frame:void at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&) [0x11b220d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::native::binary_internal::div_true_kernel_cuda(at::TensorIteratorBase&) [0x11a734d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::(anonymous namespace)::wrapper_CUDA_div__Tensor(at::Tensor&, at::Tensor const&) [0x2acc59b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::_ops::div__Tensor::call(at::Tensor&, at::Tensor const&) [0x1b8478a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:at::native::div_(at::Tensor&, c10::Scalar const&) [0x12463c6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::impl::wrap_kernel_functor_unboxed_<c10::impl::detail::WrapFunctionIntoFunctor_<c10::CompileTimeFunctionPointer<at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&), &torch::ADInplaceOrView::(anonymous namespace)::div__Scalar>, at::Tensor&, c10::guts::typelist::typelist<c10::DispatchKeySet, at::Tensor&, c10::Scalar const&> >, at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&)>::call(c10::OperatorKernel*, c10::DispatchKeySet, at::Tensor&, c10::Scalar const&) [0x3b72b22]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::autograd::VariableType::(anonymous namespace)::div__Scalar(c10::DispatchKeySet, at::Tensor&, c10::Scalar const&) [0x3622077]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::impl::make_boxed_from_unboxed_functor<c10::impl::detail::WrapFunctionIntoFunctor_<c10::CompileTimeFunctionPointer<at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&), &torch::autograd::VariableType::(anonymous namespace)::div__Scalar>, at::Tensor&, c10::guts::typelist::typelist<c10::DispatchKeySet, at::Tensor&, c10::Scalar const&> >, false>::call(c10::OperatorKernel*, c10::OperatorHandle const&, c10::DispatchKeySet, std::vector<c10::IValue, std::allocator<c10::IValue> >*) [0x3622594]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::Dispatcher::callBoxed(c10::OperatorHandle const&, std::vector<c10::IValue, std::allocator<c10::IValue> >*) const [clone .isra.0] [0x45cd300]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419fa85]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
========= Program hit cudaErrorLaunchFailure (error 719) due to "unspecified launch failure" on CUDA API call to cudaGetLastError.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x445b06]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:cudaGetLastError [0x48dd4]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/../libcudart.so.11.0
=========     Host Frame:void at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&) [0x11b200a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::native::binary_internal::div_true_kernel_cuda(at::TensorIteratorBase&) [0x11a734d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::(anonymous namespace)::wrapper_CUDA_div__Tensor(at::Tensor&, at::Tensor const&) [0x2acc59b]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so
=========     Host Frame:at::_ops::div__Tensor::call(at::Tensor&, at::Tensor const&) [0x1b8478a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:at::native::div_(at::Tensor&, c10::Scalar const&) [0x12463c6]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::impl::wrap_kernel_functor_unboxed_<c10::impl::detail::WrapFunctionIntoFunctor_<c10::CompileTimeFunctionPointer<at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&), &torch::ADInplaceOrView::(anonymous namespace)::div__Scalar>, at::Tensor&, c10::guts::typelist::typelist<c10::DispatchKeySet, at::Tensor&, c10::Scalar const&> >, at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&)>::call(c10::OperatorKernel*, c10::DispatchKeySet, at::Tensor&, c10::Scalar const&) [0x3b72b22]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::autograd::VariableType::(anonymous namespace)::div__Scalar(c10::DispatchKeySet, at::Tensor&, c10::Scalar const&) [0x3622077]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::impl::make_boxed_from_unboxed_functor<c10::impl::detail::WrapFunctionIntoFunctor_<c10::CompileTimeFunctionPointer<at::Tensor& (c10::DispatchKeySet, at::Tensor&, c10::Scalar const&), &torch::autograd::VariableType::(anonymous namespace)::div__Scalar>, at::Tensor&, c10::guts::typelist::typelist<c10::DispatchKeySet, at::Tensor&, c10::Scalar const&> >, false>::call(c10::OperatorKernel*, c10::OperatorHandle const&, c10::DispatchKeySet, std::vector<c10::IValue, std::allocator<c10::IValue> >*) [0x3622594]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:c10::Dispatcher::callBoxed(c10::OperatorHandle const&, std::vector<c10::IValue, std::allocator<c10::IValue> >*) const [clone .isra.0] [0x45cd300]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x419fa85]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::InterpreterStateImpl::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x41a13dd]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) [0x4182671]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Method::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) const [0x3e3f06a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/torch/lib/libtorch_cpu.so
=========     Host Frame:torch::jit::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, c10::IValue, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, c10::IValue> > > const&) [0x1169e]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:executeGraph(bool, bool, torch::jit::Module&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, at::Tensor&, at::Tensor&, at::Tensor&) [0x11e35]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:TorchPlugin::CudaCalcTorchForceKernel::execute(OpenMM::ContextImpl&, bool, bool) [0x142ff]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMTorchCUDA.so
=========     Host Frame:OpenMM::ContextImpl::calcForcesAndEnergy(bool, bool, int) [0x114789]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::step(int) [0x17b049]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_LangevinMiddleIntegrator_step [0xbc530]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/methodobject.c:554:cfunction_call [0x1445c8]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:215:_PyObject_MakeTpCall [0x13da6b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4181:_PyEval_EvalFrameDefault [0x1399d6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4198:_PyEval_EvalFrameDefault [0x134c5c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/classobject.c:53:method_vectorcall [0x150582]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4231:_PyEval_EvalFrameDefault [0x1358fa]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/call.c:342:_PyFunction_Vectorcall [0x144a2c]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:4213:_PyEval_EvalFrameDefault [0x134850]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:5067:_PyEval_Vector [0x1d7c60]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/ceval.c:1135:PyEval_EvalCode [0x1d7ba7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1292:run_eval_code_obj [0x20812a]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1313:run_mod [0x203523]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208:pyrun_file.cold [0x9a6f5]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456:_PyRun_SimpleFileObject [0x1fd9fe]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90:_PyRun_AnyFileObject [0x1fd594]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:670:Py_RunMain [0x1fa78b]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
edgeIndex shape
[2, 486]
receiver
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  1
  1
  1
  1
  1
  1
  1
  1
  1
  1
  1
  1
  1
  1
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  2
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  3
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  4
  5
  5
  5
  5
  5
  5
  5
  5
  5
  5
  5
  5
  5
  5
  6
  6
  6
  6
  6
  6
  6
  6
  6
  6
  6
  6
  6
  6
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  7
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  8
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
  9
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 10
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 11
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 12
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 13
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 14
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 15
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 16
 17
 17
 17
 17
 17
 17
 17
 17
 17
 17
 17
 17
 17
 18
 18
 18
 18
 18
 18
 18
 18
 18
 18
 18
 18
 18
 18
 19
 19
 19
 19
 19
 19
 19
 19
 19
 19
 19
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 20
 21
 21
 21
 21
 21
 21
 21
 21
 21
 21
 22
 22
 22
 22
 22
 22
 22
 22
 22
 22
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 23
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 24
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 25
 26
 26
 26
 26
 26
 26
 26
 26
 26
 26
 27
 27
 27
 27
 27
 27
 27
 27
 27
 28
 28
 28
 28
 28
 28
 28
 28
 28
 28
 28
 29
 29
 29
 29
 29
 29
 29
 29
 29
 29
 29
 29
 30
 30
 30
 30
 30
 30
 30
 30
 30
 30
 30
 30
 30
 30
 31
 31
 31
 31
 31
 31
 31
 31
 31
 31
 31
[ CUDALongType{486} ]
sender
  1
  2
  3
  4
  5
  6
  7
 20
 21
 22
 23
 31
  0
  2
  3
  4
  5
  6
  7
  8
  9
 20
 21
 22
 23
 31
  0
  1
  3
  4
  5
  6
  7
  8
  9
 10
 20
 21
 22
 23
 24
 31
  0
  1
  2
  4
  5
  6
  7
  8
  9
 10
 11
 15
 20
 21
 22
 23
 24
 30
 31
  0
  1
  2
  3
  5
  6
  7
  8
  9
 10
 20
 21
 22
 23
 31
  0
  1
  2
  3
  4
  6
  7
  8
  9
 20
 21
 22
 23
 31
  0
  1
  2
  3
  4
  5
  7
  8
  9
 10
 21
 22
 23
 30
  0
  1
  2
  3
  4
  5
  6
  8
  9
 10
 11
 12
 14
 15
 20
 22
 23
 24
 30
 31
  1
  2
  3
  4
  5
  6
  7
  9
 10
 11
 12
 15
 20
 23
 24
 29
 30
  1
  2
  3
  4
  5
  6
  7
  8
 10
 11
 12
 13
 14
 15
 16
 18
 20
 23
 24
 29
 30
  2
  3
  4
  6
  7
  8
  9
 11
 12
 13
 14
 15
 16
 17
 18
 20
 23
 24
 25
 29
 30
  3
  7
  8
  9
 10
 12
 13
 14
 15
 16
 23
 24
 25
 29
 30
  7
  8
  9
 10
 11
 13
 14
 15
 16
 17
 23
 24
 25
 29
 30
  9
 10
 11
 12
 14
 15
 16
 17
 18
 19
 23
 24
 25
 26
 28
 29
 30
  7
  9
 10
 11
 12
 13
 15
 16
 17
 18
 19
 23
 24
 25
 26
 27
 28
 29
 30
  3
  7
  8
  9
 10
 11
 12
 13
 14
 16
 17
 18
 19
 20
 23
 24
 25
 28
 29
 30
  9
 10
 11
 12
 13
 14
 15
 17
 18
 19
 23
 24
 25
 26
 27
 28
 29
 10
 12
 13
 14
 15
 16
 18
 19
 24
 25
 26
 27
 28
  9
 10
 13
 14
 15
 16
 17
 19
 23
 24
 25
 26
 27
 28
 13
 14
 15
 16
 17
 18
 24
 25
 26
 27
 28
  0
  1
  2
  3
  4
  5
  7
  8
  9
 10
 15
 21
 23
 24
 31
  0
  1
  2
  3
  4
  5
  6
 20
 22
 31
  0
  1
  2
  3
  4
  5
  6
  7
 21
 31
  0
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 18
 20
 24
 30
 31
  2
  3
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 23
 25
 26
 27
 28
 29
 30
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 24
 26
 27
 28
 29
 13
 14
 16
 17
 18
 19
 24
 25
 27
 28
 14
 16
 17
 18
 19
 24
 25
 26
 28
 13
 14
 15
 16
 17
 18
 19
 24
 25
 26
 27
  8
  9
 10
 11
 12
 13
 14
 15
 16
 24
 25
 30
  3
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 23
 24
 29
  0
  1
  2
  3
  4
  5
  7
 20
 21
 22
 23
[ CUDALongType{486} ]
cuda:0 cuda:0
optimize: True
6
18.328982968668662
Traceback (most recent call last):
  File "/opt/conda/envs/mace-openmm/bin/mace-md", line 8, in <module>
    sys.exit(main())
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/mace_md/cli/entrypoint.py", line 177, in main
    system.run_mixed_md(
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/mace_md/hybrid_md.py", line 423, in run_mixed_md
    simulation.step(steps)
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/app/simulation.py", line 141, in step
    self._simulate(endStep=self.currentStep+steps)
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/app/simulation.py", line 206, in _simulate
    self.integrator.step(10) # Only take 10 steps at a time, to give Python more chances to respond to a control-c.
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/openmm.py", line 13212, in step
    return _openmm.LangevinMiddleIntegrator_step(self, steps)
openmm.OpenMMException: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript, serialized code (most recent call last):
  File "code/__torch__/openmmml/models/macepotential.py", line 57, in forward
    inputDict2 = self.inputDict
    decouple_indices = self.decouple_indices
    _7 = (model0).forward(inputDict2, False, False, False, False, False, decouple_indices, lambda_interpolate, )
          ~~~~~~~~~~~~~~~ <--- HERE
    returnEnergyType = self.returnEnergyType
    energy = _7[returnEnergyType]
  File "code/__torch__/cuda_mace/models/equivariant_mace.py", line 110, in forward
    _02 = getattr(readouts, "0")
    _112 = getattr(readouts, "1")
    _34 = (_00).forward(data["node_attrs"], node_feats, edge_attrs, edge_feats, data["edge_index"], )
           ~~~~~~~~~~~~ <--- HERE
    node_feats0, sc, = _34
    node_feats1 = (_01).forward(node_feats0, sc, data["node_attrs"], )
  File "code/__torch__/cuda_mace/models/equivariant_mace.py", line 231, in forward
    print(avg_num_neighbors)
    avg_num_neighbors0 = self.avg_num_neighbors
    message1 = torch.div_(message0, avg_num_neighbors0)
               ~~~~~~~~~~ <--- HERE
    skip_tp = self.skip_tp
    optimize6 = self.optimize

Traceback of TorchScript, original code (most recent call last):
  File "/home/jhm/software/openmm-ml/openmmml/models/macepotential.py", line 444, in forward
            
                # Predict the energy.
                energy = self.model(
                         ~~~~~~~~~~ <--- HERE
                    self.inputDict,
                    compute_force=False,
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/models/equivariant_mace.py", line 555, in forward
            #     torch.cuda.nvtx.range_push(f"MACE::interaction {i}")
    
            node_feats, sc = interaction(
                             ~~~~~~~~~~~ <--- HERE
                node_attrs=data["node_attrs"],
                node_feats=node_feats,
  File "/opt/conda/envs/mace-openmm/lib/python3.10/site-packages/cuda_mace/models/equivariant_mace.py", line 225, in forward
        message = self.linear(message)
        print(self.avg_num_neighbors)
        message /= self.avg_num_neighbors
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
    
        message = self.skip_tp(message, node_attrs.int()
RuntimeError: CUDA error: unspecified launch failure
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


========= Program hit CUDA_ERROR_LAUNCH_FAILED (error 719) due to "unspecified launch failure" on CUDA API call to cuMemFree_v2.
=========     Saved host backtrace up to driver entry point at error
=========     Host Frame: [0x29121b]
=========                in /lib/x86_64-linux-gnu/libcuda.so.1
=========     Host Frame:OpenMM::CudaArray::~CudaArray() [0x5c9c1]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMCUDA.so
=========     Host Frame:OpenMM::CudaArray::~CudaArray() [0x5cada]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMCUDA.so
=========     Host Frame:OpenMM::CommonIntegrateLangevinMiddleStepKernel::~CommonIntegrateLangevinMiddleStepKernel() [0xd2c05]
=========                in /opt/conda/envs/mace-openmm/lib/plugins/libOpenMMCUDA.so
=========     Host Frame:OpenMM::Kernel::operator=(OpenMM::Kernel const&) [0x1a850d]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::LangevinMiddleIntegrator::cleanup() [0x17adb4]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::ContextImpl::~ContextImpl() [0x113f3f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:OpenMM::Context::~Context() [0x11082a]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/../../../libOpenMM.so.8.0
=========     Host Frame:_wrap_delete_Context [0xd531f]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:SwigPyObject_dealloc [0x9c761]
=========                in /opt/conda/envs/mace-openmm/lib/python3.10/site-packages/openmm/_openmm.cpython-310-x86_64-linux-gnu.so
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/dictobject.c:2067:dict_dealloc [0x131156]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/typeobject.c:1439:subtype_dealloc [0x153c24]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/dictobject.c:2067:dict_dealloc [0x131156]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/typeobject.c:1439:subtype_dealloc [0x153c24]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/frameobject.c:591:frame_dealloc [0x13d697]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/traceback.c:168:tb_dealloc [0x14dcf6]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/traceback.c:167:tb_dealloc [0x14dd53]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/traceback.c:167:tb_dealloc [0x14dd53]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/dictobject.c:1145:insertdict [0x125caf]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Objects/dictobject.c:3615:PyDict_SetItemString [0x1294a1]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pylifecycle.c:1509:finalize_modules [0x208726]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Python/pylifecycle.c:1793:Py_FinalizeEx [0x207936]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:672:Py_RunMain [0x1fa506]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:/usr/local/src/conda/python-3.10.14/Modules/main.c:1091:Py_BytesMain [0x1cb1f7]
=========                in /opt/conda/envs/mace-openmm/bin/python
=========     Host Frame:__libc_start_main [0x23d0a]
=========                in /lib/x86_64-linux-gnu/libc.so.6
=========     Host Frame: [0x1cb0f1]
=========                in /opt/conda/envs/mace-openmm/bin/python
========= 
terminate called after throwing an instance of 'OpenMM::OpenMMException'
  what():  Error deleting array oldDelta: CUDA_ERROR_LAUNCH_FAILED (719)
========= Error: process didn't terminate successfully
========= Target application returned an error
========= ERROR SUMMARY: 8 errors
